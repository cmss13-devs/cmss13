name: CI Suite
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
  run_linters:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    name: Run Linters
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Restore SpacemanDMM cache
        uses: actions/cache@v3
        with:
          path: ~/SpacemanDMM
          key: ${{ runner.os }}-spacemandmm-${{ secrets.CACHE_PURGE_KEY }}
      - name: Restore Yarn cache
        uses: actions/cache@v3
        with:
          path: tgui/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ secrets.CACHE_PURGE_KEY }}-${{ hashFiles('tgui/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Restore Rust cache
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-rust
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Tools
        run: |
          pip3 install setuptools
          bash tools/ci/install_node.sh
          cargo install ripgrep --features pcre2
          bash tools/ci/install_spaceman_dmm.sh dreamchecker
          tools/bootstrap/python -c ''
      - name: Run Linters
        run: |
          bash tools/ci/check_filedirs.sh ColonialMarinesALPHA.dme
          tools/bootstrap/python tools/ci/validate_dme.py < ColonialMarinesALPHA.dme
          bash tools/ci/check_changelogs.sh
          bash tools/ci/check_grep.sh
          bash tools/ci/check_misc.sh
          tools/build/build --ci lint tgui-test
          tools/bootstrap/python -m dmi.test
          tools/bootstrap/python -m mapmerge2.dmm_test
          ~/dreamchecker > ${GITHUB_WORKSPACE}/output-annotations.txt 2>&1
      - name: Annotate Lints
        uses: yogstation13/DreamAnnotate@v2
        if: always()
        with:
          outputFile: output-annotations.txt

  compile_all_maps:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    name: Compile Maps
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Restore BYOND cache
        uses: actions/cache@v3
        with:
          path: ~/BYOND
          key: ${{ runner.os }}-byond-${{ secrets.CACHE_PURGE_KEY }}
      - name: Compile All Maps
        run: |
          bash tools/ci/install_byond.sh
          source $HOME/BYOND/byond/bin/byondsetup
          tools/build/build --ci dm -DCIBUILDING -DCITESTING -DALL_MAPS

  find_all_maps:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    name: Find Maps to Test
    runs-on: ubuntu-20.04
    outputs:
      maps: ${{ steps.map_finder.outputs.maps }}
    concurrency:
      group: find_all_maps-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - name: Find Maps
        id: map_finder
        run: |
          echo "$(ls -mw0 maps/*.json)" > maps_output.txt
          sed -i -e s+maps/+\"+g -e s+.json+\"+g maps_output.txt
          echo "Maps: $(cat maps_output.txt)"
          echo "maps={\"paths\":[$(cat maps_output.txt)]}" >> $GITHUB_OUTPUT
  run_all_tests:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    name: Unit Tests
    needs: [find_all_maps]
    strategy:
      fail-fast: false
      matrix:
        map: ${{ fromJSON(needs.find_all_maps.outputs.maps).paths }}
    concurrency:
      group: run_all_tests-${{ github.ref }}-${{ matrix.map }}
      cancel-in-progress: true
    uses: ./.github/workflows/run_unit_tests.yml
    with:
      map: ${{ matrix.map }}
